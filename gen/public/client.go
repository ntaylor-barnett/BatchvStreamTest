// Code generated by goa v3.1.1, DO NOT EDIT.
//
// public client
//
// Command:
// $ goa gen github.com/ntaylor-barnett/BatchvStreamTest/design

package public

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "public" service client.
type Client struct {
	BatchGRPCEndpoint         goa.Endpoint
	StreamedBatchGRPCEndpoint goa.Endpoint
}

// NewClient initializes a "public" service client given the endpoints.
func NewClient(batchGRPC, streamedBatchGRPC goa.Endpoint) *Client {
	return &Client{
		BatchGRPCEndpoint:         batchGRPC,
		StreamedBatchGRPCEndpoint: streamedBatchGRPC,
	}
}

// BatchGRPC calls the "batchGRPC" endpoint of the "public" service.
func (c *Client) BatchGRPC(ctx context.Context, p *TestPayloadBatch) (res []*ResponsePayload, err error) {
	var ires interface{}
	ires, err = c.BatchGRPCEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.([]*ResponsePayload), nil
}

// StreamedBatchGRPC calls the "streamedBatchGRPC" endpoint of the "public"
// service.
func (c *Client) StreamedBatchGRPC(ctx context.Context) (res StreamedBatchGRPCClientStream, err error) {
	var ires interface{}
	ires, err = c.StreamedBatchGRPCEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(StreamedBatchGRPCClientStream), nil
}
