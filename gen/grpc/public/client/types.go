// Code generated by goa v3.1.1, DO NOT EDIT.
//
// public gRPC client types
//
// Command:
// $ goa gen github.com/ntaylor-barnett/BatchvStreamTest/design

package client

import (
	publicpb "github.com/ntaylor-barnett/BatchvStreamTest/gen/grpc/public/pb"
	public "github.com/ntaylor-barnett/BatchvStreamTest/gen/public"
)

// NewBatchGRPCRequest builds the gRPC request type from the payload of the
// "batchGRPC" endpoint of the "public" service.
func NewBatchGRPCRequest(payload []*public.TestPayload) *publicpb.BatchGRPCRequest {
	message := &publicpb.BatchGRPCRequest{}
	message.Field = make([]*publicpb.TestPayload, len(payload))
	for i, val := range payload {
		message.Field[i] = &publicpb.TestPayload{
			FirstField:     val.FirstField,
			SecondField:    val.SecondField,
			ThirdField:     val.ThirdField,
			OrganizationId: val.OrganizationID,
		}
	}
	return message
}

// NewBatchGRPCResult builds the result type of the "batchGRPC" endpoint of the
// "public" service from the gRPC response type.
func NewBatchGRPCResult(message *publicpb.BatchGRPCResponse) []*public.TestPayload {
	result := make([]*public.TestPayload, len(message.Field))
	for i, val := range message.Field {
		result[i] = &public.TestPayload{
			FirstField:     val.FirstField,
			SecondField:    val.SecondField,
			ThirdField:     val.ThirdField,
			OrganizationID: val.OrganizationId,
		}
	}
	return result
}

func NewStreamedBatchGRPCResponse(v *publicpb.StreamedBatchGRPCResponse) []*public.TestPayload {
	result := make([]*public.TestPayload, len(v.Field))
	for i, val := range v.Field {
		result[i] = &public.TestPayload{
			FirstField:     val.FirstField,
			SecondField:    val.SecondField,
			ThirdField:     val.ThirdField,
			OrganizationID: val.OrganizationId,
		}
	}
	return result
}

func NewStreamedBatchGRPCStreamingRequest(spayload []*public.TestPayload) *publicpb.StreamedBatchGRPCStreamingRequest {
	v := &publicpb.StreamedBatchGRPCStreamingRequest{}
	v.Field = make([]*publicpb.TestPayload, len(spayload))
	for i, val := range spayload {
		v.Field[i] = &publicpb.TestPayload{
			FirstField:     val.FirstField,
			SecondField:    val.SecondField,
			ThirdField:     val.ThirdField,
			OrganizationId: val.OrganizationID,
		}
	}
	return v
}
