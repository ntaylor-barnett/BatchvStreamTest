// Code generated by protoc-gen-go. DO NOT EDIT.
// source: public.proto

package publicpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BatchGRPCRequest struct {
	Records              []*TestPayload `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *BatchGRPCRequest) Reset()         { *m = BatchGRPCRequest{} }
func (m *BatchGRPCRequest) String() string { return proto.CompactTextString(m) }
func (*BatchGRPCRequest) ProtoMessage()    {}
func (*BatchGRPCRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_413a91106d7bcce8, []int{0}
}

func (m *BatchGRPCRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchGRPCRequest.Unmarshal(m, b)
}
func (m *BatchGRPCRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchGRPCRequest.Marshal(b, m, deterministic)
}
func (m *BatchGRPCRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchGRPCRequest.Merge(m, src)
}
func (m *BatchGRPCRequest) XXX_Size() int {
	return xxx_messageInfo_BatchGRPCRequest.Size(m)
}
func (m *BatchGRPCRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchGRPCRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BatchGRPCRequest proto.InternalMessageInfo

func (m *BatchGRPCRequest) GetRecords() []*TestPayload {
	if m != nil {
		return m.Records
	}
	return nil
}

// an example payload
type TestPayload struct {
	FirstField           string   `protobuf:"bytes,1,opt,name=first_field,json=firstField,proto3" json:"first_field,omitempty"`
	SecondField          string   `protobuf:"bytes,2,opt,name=second_field,json=secondField,proto3" json:"second_field,omitempty"`
	ThirdField           string   `protobuf:"bytes,3,opt,name=third_field,json=thirdField,proto3" json:"third_field,omitempty"`
	OrganizationId       uint32   `protobuf:"varint,4,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestPayload) Reset()         { *m = TestPayload{} }
func (m *TestPayload) String() string { return proto.CompactTextString(m) }
func (*TestPayload) ProtoMessage()    {}
func (*TestPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_413a91106d7bcce8, []int{1}
}

func (m *TestPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestPayload.Unmarshal(m, b)
}
func (m *TestPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestPayload.Marshal(b, m, deterministic)
}
func (m *TestPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestPayload.Merge(m, src)
}
func (m *TestPayload) XXX_Size() int {
	return xxx_messageInfo_TestPayload.Size(m)
}
func (m *TestPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_TestPayload.DiscardUnknown(m)
}

var xxx_messageInfo_TestPayload proto.InternalMessageInfo

func (m *TestPayload) GetFirstField() string {
	if m != nil {
		return m.FirstField
	}
	return ""
}

func (m *TestPayload) GetSecondField() string {
	if m != nil {
		return m.SecondField
	}
	return ""
}

func (m *TestPayload) GetThirdField() string {
	if m != nil {
		return m.ThirdField
	}
	return ""
}

func (m *TestPayload) GetOrganizationId() uint32 {
	if m != nil {
		return m.OrganizationId
	}
	return 0
}

type BatchGRPCResponse struct {
	Field                []*ResponsePayload `protobuf:"bytes,1,rep,name=field,proto3" json:"field,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *BatchGRPCResponse) Reset()         { *m = BatchGRPCResponse{} }
func (m *BatchGRPCResponse) String() string { return proto.CompactTextString(m) }
func (*BatchGRPCResponse) ProtoMessage()    {}
func (*BatchGRPCResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_413a91106d7bcce8, []int{2}
}

func (m *BatchGRPCResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchGRPCResponse.Unmarshal(m, b)
}
func (m *BatchGRPCResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchGRPCResponse.Marshal(b, m, deterministic)
}
func (m *BatchGRPCResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchGRPCResponse.Merge(m, src)
}
func (m *BatchGRPCResponse) XXX_Size() int {
	return xxx_messageInfo_BatchGRPCResponse.Size(m)
}
func (m *BatchGRPCResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchGRPCResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BatchGRPCResponse proto.InternalMessageInfo

func (m *BatchGRPCResponse) GetField() []*ResponsePayload {
	if m != nil {
		return m.Field
	}
	return nil
}

// an example payload
type ResponsePayload struct {
	FirstField           string   `protobuf:"bytes,1,opt,name=first_field,json=firstField,proto3" json:"first_field,omitempty"`
	FourthField          string   `protobuf:"bytes,2,opt,name=fourth_field,json=fourthField,proto3" json:"fourth_field,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponsePayload) Reset()         { *m = ResponsePayload{} }
func (m *ResponsePayload) String() string { return proto.CompactTextString(m) }
func (*ResponsePayload) ProtoMessage()    {}
func (*ResponsePayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_413a91106d7bcce8, []int{3}
}

func (m *ResponsePayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponsePayload.Unmarshal(m, b)
}
func (m *ResponsePayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponsePayload.Marshal(b, m, deterministic)
}
func (m *ResponsePayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponsePayload.Merge(m, src)
}
func (m *ResponsePayload) XXX_Size() int {
	return xxx_messageInfo_ResponsePayload.Size(m)
}
func (m *ResponsePayload) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponsePayload.DiscardUnknown(m)
}

var xxx_messageInfo_ResponsePayload proto.InternalMessageInfo

func (m *ResponsePayload) GetFirstField() string {
	if m != nil {
		return m.FirstField
	}
	return ""
}

func (m *ResponsePayload) GetFourthField() string {
	if m != nil {
		return m.FourthField
	}
	return ""
}

type StreamedBatchGRPCResponse struct {
	FirstField           string   `protobuf:"bytes,1,opt,name=first_field,json=firstField,proto3" json:"first_field,omitempty"`
	FourthField          string   `protobuf:"bytes,2,opt,name=fourth_field,json=fourthField,proto3" json:"fourth_field,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamedBatchGRPCResponse) Reset()         { *m = StreamedBatchGRPCResponse{} }
func (m *StreamedBatchGRPCResponse) String() string { return proto.CompactTextString(m) }
func (*StreamedBatchGRPCResponse) ProtoMessage()    {}
func (*StreamedBatchGRPCResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_413a91106d7bcce8, []int{4}
}

func (m *StreamedBatchGRPCResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamedBatchGRPCResponse.Unmarshal(m, b)
}
func (m *StreamedBatchGRPCResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamedBatchGRPCResponse.Marshal(b, m, deterministic)
}
func (m *StreamedBatchGRPCResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamedBatchGRPCResponse.Merge(m, src)
}
func (m *StreamedBatchGRPCResponse) XXX_Size() int {
	return xxx_messageInfo_StreamedBatchGRPCResponse.Size(m)
}
func (m *StreamedBatchGRPCResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamedBatchGRPCResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamedBatchGRPCResponse proto.InternalMessageInfo

func (m *StreamedBatchGRPCResponse) GetFirstField() string {
	if m != nil {
		return m.FirstField
	}
	return ""
}

func (m *StreamedBatchGRPCResponse) GetFourthField() string {
	if m != nil {
		return m.FourthField
	}
	return ""
}

func init() {
	proto.RegisterType((*BatchGRPCRequest)(nil), "public.BatchGRPCRequest")
	proto.RegisterType((*TestPayload)(nil), "public.TestPayload")
	proto.RegisterType((*BatchGRPCResponse)(nil), "public.BatchGRPCResponse")
	proto.RegisterType((*ResponsePayload)(nil), "public.ResponsePayload")
	proto.RegisterType((*StreamedBatchGRPCResponse)(nil), "public.StreamedBatchGRPCResponse")
}

func init() {
	proto.RegisterFile("public.proto", fileDescriptor_413a91106d7bcce8)
}

var fileDescriptor_413a91106d7bcce8 = []byte{
	// 317 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0x41, 0x4f, 0xf2, 0x30,
	0x18, 0xc7, 0xd3, 0x97, 0x57, 0x94, 0x67, 0x28, 0x52, 0x0f, 0x0e, 0x2e, 0xc0, 0x2e, 0xee, 0x02,
	0x31, 0xf8, 0x05, 0x14, 0x13, 0x8d, 0x27, 0xc9, 0xd4, 0x8b, 0x17, 0x52, 0xd6, 0xce, 0x35, 0x99,
	0xeb, 0x6c, 0xbb, 0x83, 0x7e, 0x15, 0xbe, 0xac, 0xa1, 0x5d, 0xcd, 0x04, 0x4c, 0x3c, 0x78, 0xdc,
	0xff, 0xf9, 0x6d, 0xcf, 0xff, 0x97, 0x3d, 0xd0, 0x2e, 0xca, 0x65, 0xc6, 0xe3, 0x49, 0x21, 0x85,
	0x16, 0xb8, 0x69, 0x9f, 0x82, 0x2b, 0x38, 0x9e, 0x11, 0x1d, 0xa7, 0xb7, 0xd1, 0xfc, 0x3a, 0x62,
	0x6f, 0x25, 0x53, 0x1a, 0x8f, 0x61, 0x5f, 0xb2, 0x58, 0x48, 0xaa, 0x7c, 0x34, 0x6c, 0x84, 0xde,
	0xf4, 0x64, 0x52, 0xbd, 0xfb, 0xc8, 0x94, 0x9e, 0x93, 0xf7, 0x4c, 0x10, 0x1a, 0x39, 0x26, 0x58,
	0x21, 0xf0, 0x6a, 0x03, 0x3c, 0x00, 0x2f, 0xe1, 0x52, 0xe9, 0x45, 0xc2, 0x59, 0x46, 0x7d, 0x34,
	0x44, 0x61, 0x2b, 0x02, 0x13, 0xdd, 0xac, 0x13, 0x3c, 0x82, 0xb6, 0x62, 0xb1, 0xc8, 0x69, 0x45,
	0xfc, 0x33, 0x84, 0x67, 0x33, 0x8b, 0x0c, 0xc0, 0xd3, 0x29, 0x97, 0x8e, 0x68, 0xd8, 0x6f, 0x98,
	0xc8, 0x02, 0x67, 0xd0, 0x11, 0xf2, 0x85, 0xe4, 0xfc, 0x83, 0x68, 0x2e, 0xf2, 0x05, 0xa7, 0xfe,
	0xff, 0x21, 0x0a, 0x0f, 0xa3, 0xa3, 0x7a, 0x7c, 0x47, 0x83, 0x19, 0x74, 0x6b, 0x82, 0xaa, 0x10,
	0xb9, 0x62, 0x78, 0x0c, 0x7b, 0xae, 0xdc, 0xda, 0xef, 0xd4, 0xf9, 0x39, 0xc0, 0x39, 0x5a, 0x2a,
	0x78, 0x82, 0xce, 0xc6, 0xe4, 0x57, 0x92, 0x89, 0x28, 0xa5, 0x4e, 0xbf, 0x4b, 0xda, 0xcc, 0x20,
	0xc1, 0x02, 0x7a, 0x0f, 0x5a, 0x32, 0xf2, 0xca, 0xe8, 0x76, 0xc5, 0x3f, 0x58, 0x30, 0x5d, 0x21,
	0x68, 0xce, 0x8d, 0x19, 0xbe, 0x84, 0xd6, 0xd7, 0x0e, 0xec, 0x3b, 0xdf, 0xcd, 0x5f, 0xdf, 0xef,
	0xed, 0x98, 0x54, 0x85, 0xee, 0xa1, 0xbb, 0xd5, 0x16, 0xef, 0xba, 0x8c, 0xfe, 0xc8, 0x85, 0x3f,
	0xda, 0x85, 0xe8, 0x1c, 0xcd, 0xe0, 0xf9, 0xc0, 0x72, 0xc5, 0x72, 0xd9, 0x34, 0x57, 0x79, 0xf1,
	0x19, 0x00, 0x00, 0xff, 0xff, 0x95, 0xf9, 0xb7, 0x39, 0xa5, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PublicClient is the client API for Public service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PublicClient interface {
	// Receives an array of payloads
	BatchGRPC(ctx context.Context, in *BatchGRPCRequest, opts ...grpc.CallOption) (*BatchGRPCResponse, error)
	// Receives an array of payloads
	StreamedBatchGRPC(ctx context.Context, opts ...grpc.CallOption) (Public_StreamedBatchGRPCClient, error)
}

type publicClient struct {
	cc grpc.ClientConnInterface
}

func NewPublicClient(cc grpc.ClientConnInterface) PublicClient {
	return &publicClient{cc}
}

func (c *publicClient) BatchGRPC(ctx context.Context, in *BatchGRPCRequest, opts ...grpc.CallOption) (*BatchGRPCResponse, error) {
	out := new(BatchGRPCResponse)
	err := c.cc.Invoke(ctx, "/public.Public/BatchGRPC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicClient) StreamedBatchGRPC(ctx context.Context, opts ...grpc.CallOption) (Public_StreamedBatchGRPCClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Public_serviceDesc.Streams[0], "/public.Public/StreamedBatchGRPC", opts...)
	if err != nil {
		return nil, err
	}
	x := &publicStreamedBatchGRPCClient{stream}
	return x, nil
}

type Public_StreamedBatchGRPCClient interface {
	Send(*TestPayload) error
	Recv() (*StreamedBatchGRPCResponse, error)
	grpc.ClientStream
}

type publicStreamedBatchGRPCClient struct {
	grpc.ClientStream
}

func (x *publicStreamedBatchGRPCClient) Send(m *TestPayload) error {
	return x.ClientStream.SendMsg(m)
}

func (x *publicStreamedBatchGRPCClient) Recv() (*StreamedBatchGRPCResponse, error) {
	m := new(StreamedBatchGRPCResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PublicServer is the server API for Public service.
type PublicServer interface {
	// Receives an array of payloads
	BatchGRPC(context.Context, *BatchGRPCRequest) (*BatchGRPCResponse, error)
	// Receives an array of payloads
	StreamedBatchGRPC(Public_StreamedBatchGRPCServer) error
}

// UnimplementedPublicServer can be embedded to have forward compatible implementations.
type UnimplementedPublicServer struct {
}

func (*UnimplementedPublicServer) BatchGRPC(ctx context.Context, req *BatchGRPCRequest) (*BatchGRPCResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatchGRPC not implemented")
}
func (*UnimplementedPublicServer) StreamedBatchGRPC(srv Public_StreamedBatchGRPCServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamedBatchGRPC not implemented")
}

func RegisterPublicServer(s *grpc.Server, srv PublicServer) {
	s.RegisterService(&_Public_serviceDesc, srv)
}

func _Public_BatchGRPC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchGRPCRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicServer).BatchGRPC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/public.Public/BatchGRPC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicServer).BatchGRPC(ctx, req.(*BatchGRPCRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Public_StreamedBatchGRPC_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(PublicServer).StreamedBatchGRPC(&publicStreamedBatchGRPCServer{stream})
}

type Public_StreamedBatchGRPCServer interface {
	Send(*StreamedBatchGRPCResponse) error
	Recv() (*TestPayload, error)
	grpc.ServerStream
}

type publicStreamedBatchGRPCServer struct {
	grpc.ServerStream
}

func (x *publicStreamedBatchGRPCServer) Send(m *StreamedBatchGRPCResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *publicStreamedBatchGRPCServer) Recv() (*TestPayload, error) {
	m := new(TestPayload)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Public_serviceDesc = grpc.ServiceDesc{
	ServiceName: "public.Public",
	HandlerType: (*PublicServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BatchGRPC",
			Handler:    _Public_BatchGRPC_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamedBatchGRPC",
			Handler:       _Public_StreamedBatchGRPC_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "public.proto",
}
